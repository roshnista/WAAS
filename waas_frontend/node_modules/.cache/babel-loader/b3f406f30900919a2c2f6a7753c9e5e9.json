{"ast":null,"code":"var _jsxFileName = \"/Users/itn.roshni.dhanjal/go/src/waas_project/src/App.js\";\nimport React, { Component } from 'react';\nimport Provider from \"react-redux\";\nimport { ConfigureStore } from './redux/configureStore';\nimport Main from \"./components/main\";\nimport { BrowserRouter } from \"react-router-dom\"; // const store = ConfigureStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/users\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //<Provider store={store}>\n      React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }\n      }))) //</Provider>\n\n    );\n  }\n\n}\n\nexport default App; //change this.state to this.props\n//make main component file in component","map":{"version":3,"sources":["/Users/itn.roshni.dhanjal/go/src/waas_project/src/App.js"],"names":["React","Component","Provider","ConfigureStore","Main","BrowserRouter","App","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,aAAR,QAA4B,kBAA5B,C,CAEA;;AAIC,MAAMC,GAAN,SAAkBL,SAAlB,CACA;AACQM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKC;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAC,IADC;AAEVC,QAAAA,KAAK,EAACM;AAFI,OAAd;AAIH,KART,EASSR,KAAD,IAAS;AACL,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdT;AAgBH;;AAGLU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AACA;AAAA;AACI;AACA,0BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAFJ,CAOI;;AAPJ;AASH;;AAzCL;;AA4CD,eAAeH,GAAf,C,CAEA;AACA","sourcesContent":["import React,{Component} from 'react';\nimport Provider from \"react-redux\";\nimport {ConfigureStore} from './redux/configureStore';\n\nimport Main from \"./components/main\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n// const store = ConfigureStore();\n\n\n\n class App extends Component\n {\n         constructor(props) {\n         super(props);\n         this.state = {\n             error: null,\n             isLoaded: false,\n             items: []\n         };\n         }\n\n         componentDidMount() {\n             fetch(\"/users\")\n                 .then(res => res.json())\n                 .then(\n                     (result) => {\n                         this.setState({\n                             isLoaded:true,\n                             items:result\n                         });\n                     },\n                     (error)=>{\n                         this.setState({\n                             isLoaded: true,\n                             error\n                         });\n                     }\n                 )\n         }\n\n\n     render() {\n         const { error, isLoaded, items } = this.state;\n         return (\n             //<Provider store={store}>\n             <BrowserRouter>\n                 <div className=\"App\">\n                     <Main/>\n                 </div>\n             </BrowserRouter>\n             //</Provider>\n         )\n     }\n }\n\nexport default App;\n\n//change this.state to this.props\n//make main component file in component"]},"metadata":{},"sourceType":"module"}